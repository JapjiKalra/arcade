#include <iostream>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#include <conio.h>
#include <stdio.h>
#ifdef _WIN32
#include <Windows.h>
#else
#include <unistd.h>
#endif
using namespace std;

bool gameover;
const int width=20;
const int height=20;
int x,y,fruitx,fruity,score;
int tailx[100], taily[100];
int ntail;


enum edirection {STOP = 0, LEFT = 1 ,RIGHT = 2 ,UP = 3 ,DOWN=4};
edirection dir;


void setup()
{
    gameover=false;
    x= width/2;
    y= height/2;
    fruitx = rand() % width;
    fruity =  rand() % height;
    score=0;
}

void draw()
{
    system("cls");
    for(int i=0;i<width+1;i++)
    {
        cout<<"#";
    }
    cout<<endl;
    for(int i=0;i<height;i++)
    {
        for(int j=0;j<width;j++)
        {
            if(j==0)
            {
                 cout<<"#";
            }
            if(j==width-1)
            {
                cout<<"#";
            }
            if(i==y && j==x)
            {
                cout<<"O";
            }
            else if(i==fruity && j==fruitx)
            {
                 cout<<"6";
            }
            else
            {  bool myprint=false;
               for(int k=0;k<ntail;k++)
               {
                 if (tailx[k]==j && taily[k]==i)
                 {
                    cout<<"o";
                    myprint =true;

                 }
                }
                if(!myprint)
                cout<<" ";
            }
        }
        cout<<endl;

    }

    for(int i=0;i<width+1;i++)
    {
        cout<<"#";
    }
    cout<<endl;
    cout<<"score:"<<score<<endl;



}

void input()
{
    if (_kbhit())
    {
        char mychar = ' ';
        mychar = _getch();
        switch(mychar)
        {
            case 'a':
                dir = LEFT ;
                break;
            case 'd':
                dir = RIGHT;
                break;
            case 'w':
                dir = UP;
                break;
            case 's':
                dir = DOWN;
                break;
            case 'x':
                gameover = true;
                break;

        }
    }



}

void logic()
{   int prevx=tailx[0];
    int prevy=taily[0];
    int prev2x,prev2y;
    tailx[0]=x;
    taily[0]=y;

    for(int i=1;i<ntail;i++)
    {
        prev2x=tailx[i];
        prev2y=taily[i];
        tailx[i]=prevx;
        taily[i]=prevy;
        prevx=prev2x;
        prevy=prev2y;


    }




    switch(dir)
        {
            case 1:
                x--;
                break;
            case 2:
                x++;
                break;
            case 3:
                y--;
                break;
            case 4:
                y++;
                break;

        }


        if(x>width || x<0 || y>height || y<0)
        {
            gameover=true;
        }

        for(int i=0; i< ntail;i++)
        {
            if(tailx[i]==x && taily[i]==y)
                gameover=true;
        }


        if((x == fruitx) && (y == fruity))
        {   printf("\a\a\a");
            score+=10;
            fruitx = rand() % width;
            fruity =  rand() % height;
            ntail++;
        }
}

void iteration1()
{
    setup();
    while(!gameover)
    {
        draw();
        input();
        logic();
        Sleep(100);


    }
}


